developed <- lc_2001 == 21 | lc_2001 == 22 | lc_2001 == 23 | lc_2001 == 24
forest <- lc_2001 == 41 | lc_2001 == 42 | lc_2001 == 43
farm <- lc_2001 == 81 | lc_2001 == 82
wetlands <- lc_2001 == 90 | lc_2001 == 95
otherUndeveloped <- lc_2001 == 52 | lc_2001 == 71 | lc_2001 == 31
water <- lc_2001 == 11
names(developed) <- "developed"
names(forest) <- "forest"
names(farm) <- "farm"
names(wetlands) <- "wetlands"
names(otherUndeveloped) <- "otherUndeveloped"
names(water) <- "water"
layer_list <- list(developed, wetlands, forest, farm, otherUndeveloped, water)
names(layer_list) <- c("developed_2001", "wetlands_2001", "forest_2001",
"farm_2001", "otherUndeveloped_2001", "water_2001")
fish_extract <- function(fishnet, layers) {
extract_list <- exact_extract(layers, fishnet, fun = "mode")
return(extract_list)
}
lc_2001_extracts <- lapply(layer_list, fish_extract, fishnet = MSA_fishnet01)
lc_2001_extracts <- data.frame(do.call(cbind, args = lc_2001_extracts))
MSA_fishnet01 <- cbind(data.frame(MSA_fishnet01), lc_2001_extracts)
MSA_fishnet <-
MSA_fishnet %>%
st_as_sf(.) %>%
st_transform("ESRI:102741")
lc_2001_lcvar <-
MSA_fishnet01 %>%
gather(var,value,developed_2001:water_2001) %>%
dplyr::select(var,value,geometry) %>%
st_as_sf()
lc_2001_lcvar$var <- as.factor(str_sub(lc_2001_lcvar$var,1,-6))
MSA_fishnet01 <-
MSA_fishnet01 %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
fishnetPop00 <-
st_interpolate_aw(MSAPop00["pop_2000"],MSA_fishnet01,extensive=TRUE) %>%
as.data.frame(.) %>%
left_join(MSA_fishnet01,.,by="geometry") %>%
mutate(pop_2000=replace_na(pop_2000,0)) %>%
dplyr::select(fishnetID,pop_2000)
fishnetPop10 <-
st_interpolate_aw(MSAPop10["pop_2010"],MSA_fishnet01,extensive=TRUE) %>%
as.data.frame(.) %>%
left_join(MSA_fishnet01,.,by="geometry") %>%
mutate(pop_2010=replace_na(pop_2010,0)) %>%
dplyr::select(pop_2010,fishnetID)
fishnetPop <-
left_join(fishnetPop00,fishnetPop10, by="fishnetID") %>%
dplyr::select(pop_2000,pop_2010,fishnetID) %>%
mutate(pop_Change = pop_2010 - pop_2000)
MSA_fishnet01 <- left_join(MSA_fishnet01,data.frame(fishnetPop),by="fishnetID") %>%
st_as_sf()
MSA_fishnet01 <- left_join(MSA_fishnet01,highwayPoints_fishnet,by="fishnetID") %>%
st_as_sf()
MSA_fishnet01$lagDevelopment <-
nn_function(xyC(MSA_fishnet01),
xyC(filter(MSA_fishnet01,developed_2001==1)),
2)
colnames(MSA_fishnet01)[which (names(MSA_fishnet01)=="developed_0111")] <-"lc_change"
if ( any("pop_2000.x" == names(MSA_fishnet01))) {
MSA_fishnet01 <-
MSA_fishnet01 %>%
mutate(pop_2000 = pop_2000.x,
pop_2010 = pop_2010.x,
pop_Change = pop_Change.x)
} # this happens sometimes
dat2 <- left_join(MSA_fishnet01, MSA_fishnet11, by="geometry")
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf()
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf() %>%
select(-developed_2001, -wetlands_2001, -forest_2001, -farm_2001, -otherUndeveloped_2001, -water_2001)
MSA_fishnet11 <- cbind(data.frame(MSA_fishnet), lc_2011_extracts)
MSA_fishnet11 <-
MSA_fishnet11 %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf() %>%
select(-developed_2001, -wetlands_2001, -forest_2001, -farm_2001, -otherUndeveloped_2001, -water_2001)
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf() %>%
MSA_fishnet11 %>%
select(-developed_2001, -wetlands_2001, -forest_2001, -farm_2001, -otherUndeveloped_2001, -water_2001)
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf() %>%
MSA_fishnet11 <-
MSA_fishnet11 %>%
select(-developed_2001, -wetlands_2001, -forest_2001, -farm_2001, -otherUndeveloped_2001, -water_2001)
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf()
MSA_fishnet11 <-
MSA_fishnet11 %>%
select(-developed_2001, -wetlands_2001, -forest_2001, -farm_2001, -otherUndeveloped_2001, -water_2001)
colnames(MSA_fishnet11)
MSA_fishnet11 <-
MSA_fishnet11 %>%
select(-developed_2001, -wetlands_2001, -forest_2001, -otherUndeveloped_2001, -farm_2001)
MSA_fishnet11 <-
MSA_fishnet11 %>%
dplyr::select(-developed_2001, -wetlands_2001, -forest_2001, -otherUndeveloped_2001, -farm_2001)
MSA_fishnet11 <-
MSA_fishnet11 %>%
dplyr::select(-developed_2001, -wetlands_2001, -forest_2001, -otherUndeveloped_2001, -farm_2001, -water_2001)
MSA_fishnet11 <- cbind(data.frame(MSA_fishnet), lc_2011_extracts)
if ( any("pop_2000.x" == names(MSA_fishnet11))) {
MSA_fishnet11 <-
MSA_fishnet11 %>%
mutate(pop_2000 = pop_2000.x,
pop_2010 = pop_2010.x,
pop_Change = pop_Change.x)
}
MSA_fishnet11 <-
MSA_fishnet11 %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf()
MSA_fishnet11 <-
MSA_fishnet11 %>%
dplyr::select(-developed_2001, -wetlands_2001, -forest_2001, -otherUndeveloped_2001, -farm_2001, -water_2001)
MSA_fishnet11$lagDevelopment <-
nn_function(xyC(MSA_fishnet11),
xyC(filter(MSA_fishnet11,developed_2011==1)),
2)
colnames(MSA_fishnet11)[which (names(MSA_fishnet11)=="developed_0111")] <-"lc_change"
MSA_fishnet11 <- MSA_fishnet11 %>%
mutate(developed11 = ifelse(lc_change==1 & developed_2011 == 1, 0, developed_2011))
dat11 <-
MSA_fishnet11 %>%
dplyr::select(lc_change, developed_2011,wetlands_2011,forest_2011,farm_2011,otherUndeveloped_2011,water_2011,pop_2000,pop_2010, pop_Change,
distance_highways, lagDevelopment)  %>%
st_join(Pittsburgh_MSA) %>%
filter(water_2001 == 0)
dat11 <-
MSA_fishnet11 %>%
dplyr::select(lc_change, developed_2011,wetlands_2011,forest_2011,farm_2011,otherUndeveloped_2011,water_2011,pop_2000,pop_2010, pop_Change,
distance_highways, lagDevelopment)  %>%
st_join(Pittsburgh_MSA) %>%
filter(water_2011 == 0)
View(dat11)
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2021) %>%
mutate(proportion_of_county_pop = pop_2010 / county_population_2011,
pop_2021.infill = proportion_of_county_pop * county_projection_2021,
pop_Change = round(pop_2021.infill - pop_2010),2) %>%
dplyr::select(-county_projection_2021, -county_population_2011,
-proportion_of_county_pop, -pop_2021.infill) %>%
#predict for 2021; only changed pop and lag
mutate(predict_2021.infill = predict(Model6,. , type="response"))
dat_infill <-
dat11 %>%
#calculate population change
left_join(countyPopulation_2021) %>%
mutate(proportion_of_county_pop = pop_2010 / county_population_2011,
pop_2021.infill = proportion_of_county_pop * county_projection_2021,
pop_Change = round(pop_2021.infill - pop_2010),2) %>%
dplyr::select(-county_projection_2021, -county_population_2011,
-proportion_of_county_pop, -pop_2021.infill) %>%
#predict for 2021; only changed pop and lag
mutate(predict_2021.infill = predict(Model6,. , type="response"))
# Force variable names to be same with model
dat11 <-
MSA_fishnet11 %>%
dplyr::mutate(developed_2001 = developed_2011,
wetlands_2001 = wetlands_2011,
forest_2001 = forest_2011,
farm_2001 = farm_2011,
otherUndeveloped_2001 = otherUndeveloped_2011)
# Force variable names to be same with model
dat11 <-
dat11 %>%
dplyr::mutate(developed_2001 = developed_2011,
wetlands_2001 = wetlands_2011,
forest_2001 = forest_2011,
farm_2001 = farm_2011,
otherUndeveloped_2001 = otherUndeveloped_2011)
MSA_fishnet11 <- cbind(data.frame(MSA_fishnet), lc_2011_extracts)
MSA_fishnet11 <-
MSA_fishnet11 %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf()
MSA_fishnet11 <-
MSA_fishnet11 %>%
dplyr::select(-developed_2001, -wetlands_2001, -forest_2001, -otherUndeveloped_2001, -farm_2001, -water_2001)
MSA_fishnet11$lagDevelopment <-
nn_function(xyC(MSA_fishnet11),
xyC(filter(MSA_fishnet11,developed_2011==1)),
2)
colnames(MSA_fishnet11)[which (names(MSA_fishnet11)=="developed_0111")] <-"lc_change"
MSA_fishnet11 <- MSA_fishnet11 %>%
mutate(developed11 = ifelse(lc_change==1 & developed_2011 == 1, 0, developed_2011)) #no use
dat11 <-
MSA_fishnet11 %>%
dplyr::select(lc_change, developed_2011,wetlands_2011,forest_2011,farm_2011,otherUndeveloped_2011,water_2011,pop_2000,pop_2010, pop_Change,
distance_highways, lagDevelopment)  %>%
st_join(Pittsburgh_MSA) %>%
filter(water_2011 == 0)
# Force variable names to be same with model
dat11 <-
dat11 %>%
dplyr::mutate(developed_2001 = developed_2011,
wetlands_2001 = wetlands_2011,
forest_2001 = forest_2011,
farm_2001 = farm_2011,
otherUndeveloped_2001 = otherUndeveloped_2011)
# Force variable names to be same with model
dat11 <-
dat11 %>%
dplyr::mutate(developed_2001 = developed_2011,
wetlands_2001 = wetlands_2011,
forest_2001 = forest_2011,
farm_2001 = farm_2011,
otherUndeveloped_2001 = otherUndeveloped_2011) %>%
dplyr::select(-developed_2011, -wetlands_2011, -forest_2011, -farm_2011, -otherUndeveloped_2011)
MSA_fishnet11 <- cbind(data.frame(MSA_fishnet), lc_2011_extracts)
MSA_fishnet11 <-
MSA_fishnet11 %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
MSA_fishnet11 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf()
MSA_fishnet11 <-
MSA_fishnet11 %>%
dplyr::select(-developed_2001, -wetlands_2001, -forest_2001, -otherUndeveloped_2001, -farm_2001, -water_2001)
MSA_fishnet11$lagDevelopment <-
nn_function(xyC(MSA_fishnet11),
xyC(filter(MSA_fishnet11,developed_2011==1)),
2)
colnames(MSA_fishnet11)[which (names(MSA_fishnet11)=="developed_0111")] <-"lc_change"
MSA_fishnet11 <- MSA_fishnet11 %>%
mutate(developed11 = ifelse(lc_change==1 & developed_2011 == 1, 0, developed_2011)) #no use
dat11 <-
MSA_fishnet11 %>%
dplyr::select(lc_change, developed_2011,wetlands_2011,forest_2011,farm_2011,otherUndeveloped_2011,water_2011,pop_2000,pop_2010, pop_Change,
distance_highways, lagDevelopment)  %>%
st_join(Pittsburgh_MSA) %>%
filter(water_2011 == 0)
# Force variable names to be same with model
dat11 <-
dat11 %>%
dplyr::mutate(developed_2001 = developed_2011,
wetlands_2001 = wetlands_2011,
forest_2001 = forest_2011,
farm_2001 = farm_2011,
otherUndeveloped_2001 = otherUndeveloped_2011) %>%
dplyr::select(-developed_2011, -wetlands_2011, -forest_2011, -farm_2011, -otherUndeveloped_2011)
dat_infill <-
dat11 %>%
#calculate population change
left_join(countyPopulation_2021) %>%
mutate(proportion_of_county_pop = pop_2010 / county_population_2011,
pop_2021.infill = proportion_of_county_pop * county_projection_2021,
pop_Change = round(pop_2021.infill - pop_2010),2) %>%
dplyr::select(-county_projection_2021, -county_population_2011,
-proportion_of_county_pop, -pop_2021.infill) %>%
#predict for 2021; only changed pop and lag
mutate(predict_2021.infill = predict(Model6,. , type="response"))
View(dat_infill)
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2021.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill, "predict_2021.infill"),1,8),
name="Quintile\nBreaks") +
geom_sf(data=Pittsburgh_MSA, fill=NA, colour="black", size=1.5) +
labs(title= "Development Demand in 2021: Predicted Probabilities") +
mapTheme()
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2021.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill, "predict_2021.infill"),1,10),
name="Quintile\nBreaks") +
geom_sf(data=Pittsburgh_MSA, fill=NA, colour="black", size=1.5) +
labs(title= "Development Demand in 2021: Predicted Probabilities") +
mapTheme()
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2021.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill, "predict_2021.infill"),1,4),
name="Quintile\nBreaks") +
geom_sf(data=Pittsburgh_MSA, fill=NA, colour="black", size=1.5) +
labs(title= "Development Demand in 2021: Predicted Probabilities") +
mapTheme()
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2021.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill, "predict_2021.infill"),1,6),
name="Quintile\nBreaks") +
geom_sf(data=Pittsburgh_MSA, fill=NA, colour="black", size=1.5) +
labs(title= "Development Demand in 2021: Predicted Probabilities") +
mapTheme()
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2021.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill, "predict_2021.infill"),1,8),
name="Quintile\nBreaks") +
geom_sf(data=Pittsburgh_MSA, fill=NA, colour="black", size=1.5) +
labs(title= "Development Demand in 2021: Predicted Probabilities") +
mapTheme()
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2021.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill, "predict_2021.infill"),1,8),
name="Quintile\nBreaks") +
geom_sf(data=Pittsburgh_MSA, fill=NA, colour="black", size=1.5) +
labs(title= "Development Demand in 2021: Predicted Probabilities") +
mapTheme()
ggplot() +
geom_sf(data=Pittsburgh_MSA_boundary) +
geom_raster(data = rbind(rast(lc_2001) %>% mutate(label = "2001"),
rast(lc_2011) %>% mutate(label = "2011")) %>%
na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
facet_wrap(~label) +
scale_fill_viridis(discrete=TRUE, direction=-1,name ="") +
labs(title = "Land Cover, 2001 & 2011") +
mapTheme() + theme(legend.position = "none")
dat2 <- left_join(MSA_fishnet01, MSA_fishnet11, by="geometry")
dat2 <- st_join(MSA_fishnet01, MSA_fishnet11, by="geometry")
dat2 <-
dat2 %>%
mutate(sensitive_lost11 = ifelse(forest_2001 == 1 & forest_2011 == 0 |
wetlands_2001 == 1 & wetlands_2011 == 0,1,0)) # this includes lands that are not developed at all (farm)
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitive_lost11))) +
scale_colour_manual(values = palette2,
labels=c("No Change","Sensitive Lost"),
name = "") +
labs(title = "Sensitive lands lost: 2001 - 2011",
subtitle = "As fishnet centroids") +
mapTheme()
View(dat2)
sensitiveRegions <-
raster::clump(wetlands11 + forest11) %>%
rasterToPolygons() %>%
st_as_sf() %>%
group_by(clumps) %>% summarize() %>%
mutate(Acres = as.numeric(st_area(.) * 0.0000229568)) %>%
filter(Acres > 3954)  %>%
dplyr::select() %>%
rasterize(.,emptyRaster)
sensitiveRegions[sensitiveRegions > 0] <- 1
names(sensitiveRegions) <- "sensitiveRegions"
dat2 <-
aggregateRaster(c(sensitiveRegions), dat2) %>%
dplyr::select(sensitiveRegions) %>%
st_set_geometry(NULL) %>%
bind_cols(.,dat2) %>%
st_sf()
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitiveRegions))) +
scale_colour_manual(values = palette2,
labels=c("Other","Sensitive Regions"),
name="") +
labs(title = "Sensitive regions",
subtitle = "Continous areas of either wetlands or forests\ngreater than 1 acre") +
mapTheme()
county_specific_metrics <-
dat2 %>%
#predict development demand from our model
mutate(Development_Demand = predict(Model6, dat11, type="response")) %>% #change name of variable!
#get a count count of grid cells by county which we can use to calculate rates below
left_join(st_set_geometry(dat, NULL) %>% group_by(NAME) %>% summarize(count = n()), by = character()) %>%
#calculate summary statistics by county
group_by(NAME) %>%
summarize(Total_Farmland = sum(farm_2011) / max(count),
Total_Forest = sum(forest_2011) / max(count),
Total_Wetlands = sum(wetlands_2011) / max(count),
Total_Undeveloped = sum(otherUndeveloped_2011) / max(count),
Sensitive_Land_Lost = sum(sensitive_lost11) / max(count),
Sensitive_Regions = sum(sensitiveRegions) / max(count),
Mean_Development_Demand = mean(Development_Demand)) %>%
#get population data by county
left_join(countyPopulation_2021 %>%
mutate(Population_Change = county_projection_2021 - county_population_2011,
Population_Change_Rate = Population_Change / county_projection_2021) %>%
dplyr::select(NAME,Population_Change_Rate))
MSA_fishnet0111 <- left_join(MSA_fishnet11, MSA_fishnet01, by="fishnetID") %>%
st_as_sf()
dat0111 <- st_join(MSA_fishnet01, MSA_fishnet11, by="geometry")
rm(dat2)
dat2 <-
dat0111 %>%
mutate(sensitive_lost11 = ifelse(forest_2001 == 1 & forest_2011 == 0 |
wetlands_2001 == 1 & wetlands_2011 == 0,1,0)) # this includes lands that are not developed at all (farm)
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitive_lost11))) +
scale_colour_manual(values = palette2,
labels=c("No Change","Sensitive Lost"),
name = "") +
labs(title = "Sensitive lands lost: 2001 - 2011",
subtitle = "As fishnet centroids") +
mapTheme()
sensitiveRegions <-
raster::clump(wetlands11 + forest11) %>%
rasterToPolygons() %>%
st_as_sf() %>%
group_by(clumps) %>% summarize() %>%
mutate(Acres = as.numeric(st_area(.) * 0.0000229568)) %>%
filter(Acres > 3954)  %>%
dplyr::select() %>%
rasterize(.,emptyRaster)
sensitiveRegions[sensitiveRegions > 0] <- 1
names(sensitiveRegions) <- "sensitiveRegions"
dat2 <-
aggregateRaster(c(sensitiveRegions), dat2) %>%
dplyr::select(sensitiveRegions) %>%
st_set_geometry(NULL) %>%
bind_cols(.,dat2) %>%
st_sf()
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitiveRegions))) +
scale_colour_manual(values = palette2,
labels=c("Other","Sensitive Regions"),
name="") +
labs(title = "Sensitive regions",
subtitle = "Continous areas of either wetlands or forests\ngreater than 1 acre") +
mapTheme()
View(dat_infill)
View(dat2)
county_specific_metrics <-
dat_infill %>%
#predict development demand from our model
mutate(Development_Demand = predict(Model6, dat_infill, type="response")) %>% #change name of variable!
#get a count count of grid cells by county which we can use to calculate rates below
left_join(st_set_geometry(dat, NULL) %>% group_by(NAME) %>% summarize(count = n()), by = character()) %>%
#calculate summary statistics by county
group_by(NAME) %>%
summarize(Total_Farmland = sum(farm_2011) / max(count),
Total_Forest = sum(forest_2011) / max(count),
Total_Wetlands = sum(wetlands_2011) / max(count),
Total_Undeveloped = sum(otherUndeveloped_2011) / max(count),
Sensitive_Land_Lost = sum(sensitive_lost11) / max(count),
Sensitive_Regions = sum(sensitiveRegions) / max(count),
Mean_Development_Demand = mean(Development_Demand)) %>%
#get population data by county
left_join(countyPopulation_2021 %>%
mutate(Population_Change = county_projection_2021 - county_population_2011,
Population_Change_Rate = Population_Change / county_projection_2021) %>%
dplyr::select(NAME,Population_Change_Rate))
View(dat_infill)
View(dat)
county_specific_metrics <-
dat_infill %>%
left_join(st_set_geometry(dat, NULL) %>% group_by(NAME) %>% summarize(count = n()), by = character()) %>%
#calculate summary statistics by county
group_by(NAME) %>%
summarize(Total_Farmland = sum(farm_2011) / max(count),
Total_Forest = sum(forest_2011) / max(count),
Total_Wetlands = sum(wetlands_2011) / max(count),
Total_Undeveloped = sum(otherUndeveloped_2011) / max(count),
Sensitive_Land_Lost = sum(sensitive_lost11) / max(count),
Sensitive_Regions = sum(sensitiveRegions) / max(count),
Mean_Development_Demand = mean(Development_Demand)) %>%
#get population data by county
left_join(countyPopulation_2021 %>%
mutate(Population_Change = county_projection_2021 - county_population_2011,
Population_Change_Rate = Population_Change / county_projection_2021) %>%
dplyr::select(NAME,Population_Change_Rate))
county_specific_metrics <-
dat_infill %>%
left_join(st_set_geometry(dat, NULL) %>% group_by(NAME) %>% summarize(count = n()), by = character())
View(county_specific_metrics)
county_specific_metrics <-
dat_infill %>%
group_by(NAME) %>% summarize(count = n()), by = character()) %>%
county_specific_metrics <-
dat2 %>%
#predict development demand from our model
mutate(Development_Demand = predict(Model6, dat2, type="response")) %>% #change name of variable!
#get a count count of grid cells by county which we can use to calculate rates below
left_join(st_set_geometry(dat, NULL) %>% group_by(NAME) %>% summarize(count = n()), by = character()) %>%
#calculate summary statistics by county
group_by(NAME) %>%
summarize(Total_Farmland = sum(farm_2011) / max(count),
Total_Forest = sum(forest_2011) / max(count),
Total_Wetlands = sum(wetlands_2011) / max(count),
Total_Undeveloped = sum(otherUndeveloped_2011) / max(count),
Sensitive_Land_Lost = sum(sensitive_lost11) / max(count),
Sensitive_Regions = sum(sensitiveRegions) / max(count),
Mean_Development_Demand = mean(Development_Demand)) %>%
#get population data by county
left_join(countyPopulation_2021 %>%
mutate(Population_Change = county_projection_2021 - county_population_2011,
Population_Change_Rate = Population_Change / county_projection_2021) %>%
dplyr::select(NAME,Population_Change_Rate))
rm(dat2)
dat2 <-
dat0111 %>%
mutate(sensitive_lost11 = ifelse(forest_2001 == 1 & forest_2011 == 0 |
wetlands_2001 == 1 & wetlands_2011 == 0,1,0)) # this includes lands that are not developed at all (farm)
dat2 <-
aggregateRaster(c(sensitiveRegions), dat2) %>%
dplyr::select(sensitiveRegions) %>%
st_set_geometry(NULL) %>%
bind_cols(.,dat2) %>%
st_sf()
View(dat2)
getwd()
getwd()
