extract_list <- exact_extract(layers, fishnet, fun = "mode")
return(extract_list)
}
lc_2001_extracts <- lapply(layer_list, fish_extract, fishnet = MSA_fishnet)
lc_2001_extracts <- data.frame(do.call(cbind, args = lc_2001_extracts))
MSA_fishnet <- cbind(data.frame(MSA_fishnet), lc_2001_extracts)
MSA_fishnet <-
MSA_fishnet %>%
st_as_sf(.) %>%
st_transform(102741)
lc_2001_lcvar <-
MSA_fishnet %>%
gather(var,value,developed_2001:water_2001) %>%
dplyr::select(var,value,geometry)
lc_2001_lcvar$var <- as.factor(str_sub(lc_2001_lcvar$var,1,-6))
ggplot()+
geom_sf(data=lc_2001_lcvar,aes(fill=as.factor(value)),color='transparent')+
facet_wrap(~var)+
scale_fill_viridis(discrete=TRUE, labels=c("Other","Land Cover"),name ="")+
labs(title = "Land cover types, 2001",
subtitle = "As fishnet centroids") +
mapTheme()
census_api_key("2c3e9f9d2d65abab5f7b81fe418054415d363a43",install=TRUE,overwrite=TRUE)
MSAPop10 <-
get_decennial(geography = "tract",variables = "P001001",year=2010,
state=42,county=c("Allegheny County","Armstrong County","Beaver County","Butler County","Fayette County",
"Washington County","Westmoreland County"),geometry=TRUE) %>%
rename(pop_2010 = value) %>%
st_transform(st_crs(MSA_fishnet))
Sys.setenv(CENSUS_KEY = "2c3e9f9d2d65abab5f7b81fe418054415d363a43")
MSAPop00 <-getCensus(name = "dec/sf1",
vintage = 2000,
vars = c("NAME","P001001"),
region = "tract:*",
regionin = "state:42+county:003,005,007,019,051,125,129")
MSAPop00$label <- paste0(MSAPop00$county,"0",MSAPop00$tract)
for (i in 1:721){
if(nchar(MSAPop00[i,]$label)!=10){
MSAPop00[i,]$label <-paste0(MSAPop00[i,]$label,"00")
}
}
MSAtracts00 <- st_read("MSAtracts/MSAtracts.shp") %>%
st_transform(102741)
MSAtracts00$tract <-substr(MSAtracts00$GISJOIN2 ,4,13)
MSAtracts00$tract <- as.character(MSAtracts00$tract)
MSAPop00 <- left_join(MSAtracts00, MSAPop00,by=c("tract"="label"))
MSAPop00 <- MSAPop00 %>%
dplyr::select(GISJOIN2,NAME,P001001,geometry) %>%
rename(GEOID = GISJOIN2,pop_2000 = P001001)
grid.arrange(
ggplot() +
geom_sf(data = MSAPop00, aes(fill=factor(ntile(pop_2000,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(MSAPop00,"pop_2000"),
name="Quintile\nBreaks") +
labs(title="Population, Pittsburgh MSA: 2000") +
mapTheme(),
ggplot() +
geom_sf(data = MSAPop10, aes(fill=factor(ntile(pop_2010,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(MSAPop10,"pop_2010"),
name="Quintile\nBreaks") +
labs(title="Population, Pittsburgh MSA: 2010") +
mapTheme(), ncol=2)
MSA_fishnet <-
MSA_fishnet %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
fishnetPop00 <-
st_interpolate_aw(MSAPop00["pop_2000"],MSA_fishnet,extensive=TRUE) %>%
as.data.frame(.) %>%
left_join(MSA_fishnet,.,by="geometry") %>%
mutate(pop_2000=replace_na(pop_2000,0)) %>%
dplyr::select(fishnetID,pop_2000)
fishnetPop10 <-
st_interpolate_aw(MSAPop10["pop_2010"],MSA_fishnet,extensive=TRUE) %>%
as.data.frame(.) %>%
left_join(MSA_fishnet,.,by="geometry") %>%
mutate(pop_2010=replace_na(pop_2010,0)) %>%
dplyr::select(pop_2010,fishnetID)
fishnetPop <-
cbind(fishnetPop00,fishnetPop10) %>%
dplyr::select(pop_2000,pop_2010,fishnetID) %>%
mutate(pop_Change = pop_2010 - pop_2000) %>%
st_drop_geometry(.)
MSA_fishnet <- left_join(MSA_fishnet,data.frame(fishnetPop),by="fishnetID")
grid.arrange(
ggplot() +
geom_sf(data=MSAPop10, aes(fill=factor(ntile(pop_2010,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(MSAPop10,"pop_2010"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, Pittsburgh MSA: 2010",
subtitle="Represented as tracts; Boundaries omitted") +
mapTheme(),
ggplot() +
geom_sf(data=MSA_fishnet, aes(fill=factor(ntile(pop_2010,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(fishnetPop,"pop_2010"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, Pittsburgh MSA: 2010",
subtitle="Represented as fishnet gridcells; Boundaries omitted") +
mapTheme(), ncol=2)
View(MSA_fishnet)
PittsburghHighways <-
st_read("MSAHighways/MSAHighways.shp") %>%
st_transform(st_crs(Pittsburgh_MSA)) %>%
st_intersection(Pittsburgh_MSA_boundary)
PittsburghHighways <-
PittsburghHighways %>%
dplyr::select(CTY_CODE, DISTRICT_N,MAINT_FUNC,geometry)
MSA_fishnet <- cbind(data.frame(MSA_fishnet),lc_change_extract)
MSA_fishnet <-
MSA_fishnet %>%
st_as_sf(.) %>%
st_transform(102741)
ggplot() +
geom_sf(data=MSA_fishnet,aes(fill=as.factor(developed_2011)),color='transparent') +
geom_sf(data=PittsburghHighways,color='white') +
scale_fill_viridis(discrete=TRUE, name ="Land Cover\nChange",labels=c("No Change","New Development")) +
labs(title = "Pittsburgh MSA New Development and Highways") +
mapTheme()
emptyRaster <- lc_change
emptyRaster[] <- NA
highway_raster <-
as(PittsburghHighways,'Spatial') %>%
rasterize(.,emptyRaster)
highway_raster_distance <- distance(highway_raster)
names(highway_raster_distance) <- "distance_highways"
highwayPoints <-
rasterToPoints(highway_raster_distance) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(MSA_fishnet))
highwayPoints_fishnet <-
aggregate(highwayPoints, MSA_fishnet, mean) %>%
mutate(distance_highways = ifelse(is.na(distance_highways),0,distance_highways)) %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
highwayPoints_fishnet <-highwayPoints_fishnet %>%
st_drop_geometry(.)
MSA_fishnet <- left_join(MSA_fishnet,highwayPoints_fishnet,by="fishnetID")
writeRaster(highway_raster,"highway_raster.tif")
ggplot() +
geom_sf(data=Pittsburgh_MSA_boundary) +
geom_point(data=MSA_fishnet , aes(x=xyC(MSA_fishnet )[,1],
y=xyC(MSA_fishnet)[,2],
colour=factor(ntile(distance_highways,5))),size=1.5) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(MSA_fishnet ,"distance_highways"),1,8),
name="Quintile\nBreaks") +
geom_sf(data=PittsburghHighways, colour = "red") +
labs(title = "Distance to Highways",
subtitle = "As fishnet centroids; Highways visualized in red") +
mapTheme()
nn_function <- function(measureFrom,measureTo,k) {
#convert the sf layers to matrices
measureFrom_Matrix <-
as.matrix(measureFrom)
measureTo_Matrix <-
as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
MSA_fishnet$lagDevelopment <-
nn_function(xyC(MSA_fishnet),
xyC(filter(MSA_fishnet,developed_2001==1)),
2)
ggplot() +
geom_sf(data=Pittsburgh_MSA_boundary) +
geom_point(data=MSA_fishnet,
aes(x=xyC(MSA_fishnet)[,1], y=xyC(MSA_fishnet)[,2],
colour=factor(ntile(lagDevelopment,5))), size=1.5) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(MSA_fishnet,"lagDevelopment"),1,7),
name="Quintile\nBreaks") +
labs(title = "Spatial lag to 2001 development",
subtitle = "As fishnet centroids") +
mapTheme()
ggplot()+
geom_sf(data=Pittsburgh_MSA)+
labs(title="Pittsburgh MSA Counties")+
mapTheme()
colnames(MSA_fishnet)[which (names(MSA_fishnet)=="developed_2011")] <-"lc_change"
MSA_fishnet <-
st_make_grid(Pittsburgh_MSA_boundary, 3000) %>%
st_sf()
MSA_fishnet <-
MSA_fishnet[Pittsburgh_MSA_boundary,]
ggplot()+
geom_sf(data=MSA_fishnet) +
labs(title="Pittsburgh MSA Fishnet, 3000 foot resolution")+
mapTheme()
MSA_fishnet <- cbind(data.frame(MSA_fishnet),lc_change_extract)
MSA_fishnet <-
MSA_fishnet %>%
st_as_sf(.) %>%
st_transform(102741)
MSA_fishnet <- cbind(data.frame(MSA_fishnet), lc_2001_extracts)
MSA_fishnet <-
MSA_fishnet %>%
st_as_sf(.) %>%
st_transform(102741)
MSA_fishnet <- left_join(MSA_fishnet,data.frame(fishnetPop),by="fishnetID")
MSA_fishnet <-
MSA_fishnet %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID))
MSA_fishnet <- left_join(MSA_fishnet,data.frame(fishnetPop),by="fishnetID")
MSA_fishnet <- left_join(MSA_fishnet,highwayPoints_fishnet,by="fishnetID")
MSA_fishnet$lagDevelopment <-
nn_function(xyC(MSA_fishnet),
xyC(filter(MSA_fishnet,developed_2001==1)),
2)
colnames(MSA_fishnet)[which (names(MSA_fishnet)=="developed_2011")] <-"lc_change"
dat <-
MSA_fishnet %>%
dplyr::select(lc_change,developed_2001,wetlands_2001,forest_2001,farm_2001,otherUndeveloped_2001,water_2001,pop_2000,pop_2010,pop_Change,
distance_highways, lagDevelopment)  %>%
st_join(Pittsburgh_MSA) %>%
mutate(developed11 = ifelse(lc_change==1 & developed_2001 == 1,0,developed_2001)) %>%
filter(water_2001 == 0)
View(dat)
dat %>%
dplyr::select(distance_highways,lagDevelopment,lc_change) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of the countinuous variables") +
plotTheme()
dat$lc_change <- as.factor(dat$lc_change)
dat %>%
dplyr::select(distance_highways,lagDevelopment,lc_change) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of the countinuous variables") +
plotTheme()
dat %>%
dplyr::select(distance_highways,lagDevelopment,lc_change) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of the countinuous variables") +
plotTheme()
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables") +
plotTheme()
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change*100)
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables") +
plotTheme()
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change*100) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables") +
plotTheme()
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change*10) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables") +
plotTheme()
grid.arrange(
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables",
subtitle = "Original Population Change") +
plotTheme(),
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change*10) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables",
subtitle = "Multiply Population Change by 10") +
plotTheme(),ncol=2)
grid.arrange(
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables",
subtitle = "Original Population Change") +
plotTheme(),
dat %>%
dplyr::select(pop_2000,pop_2010,pop_Change,lc_change) %>%
mutate(pop_Change=pop_Change*10) %>%
gather(Variable, Value, -lc_change, -geometry) %>%
ggplot(., aes(lc_change, Value, fill=lc_change)) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New development as a function of factor variables",
subtitle = "Multiply Population Change by 10") +
plotTheme(),ncol=1)
library(kableExtra)
dat %>%
dplyr::select(lc_change:otherUndeveloped_2001) %>%
gather(Land_Cover_Type, Value, -lc_change, -geometry) %>%
st_set_geometry(NULL) %>%
group_by(lc_change, Land_Cover_Type) %>%
summarize(n = sum(as.numeric(Value))) %>%
ungroup() %>%
mutate(Conversion_Rate = paste0(round(100 * n/sum(n), 2), "%")) %>%
filter(lc_change == 1) %>%
dplyr::select(Land_Cover_Type,Conversion_Rate) #%>%
# kable() %>% kable_styling(full_width = F)
install.packages("formattable")
library(formattable)
table <-dat %>%
dplyr::select(lc_change:otherUndeveloped_2001) %>%
gather(Land_Cover_Type, Value, -lc_change, -geometry) %>%
st_set_geometry(NULL) %>%
group_by(lc_change, Land_Cover_Type) %>%
summarize(n = sum(as.numeric(Value))) %>%
ungroup() %>%
mutate(Conversion_Rate = paste0(round(100 * n/sum(n), 2), "%")) %>%
filter(lc_change == 1) %>%
dplyr::select(Land_Cover_Type,Conversion_Rate) #%>%
View(table)
class(table)
table <- data.frame(table)
table
formattable(table,list(
area(col=c(Conversion_Rate) ~normalize_bar("pink",0.2))
))
formattable(table,list(
area(col=c(Conversion_Rate) ~normalize_bar("pink",1))
))
formattable(table,list(
area(col=c(Conversion_Rate) ~normalize_bar("pink",100))
))
?normalize_bar()
formattable(table,list(
area(col=c(Conversion_Rate) ~normalize_bar("pink"))
))
formattable(table,list(
Conversion_Rate = normalize_bar()
))
formattable(table,list(
Conversion_Rate = normalize_bar("pink")
))
formattable(table,list(
Conversion_Rate = normalize_bar("pink",1)
))
formattable(table,list(
Conversion_Rate = normalize_bar("pink",0.1)
))
formattable(table,list(
Conversion_Rate = normalize_bar("pink",0.01)
))
formattable(table,list(
Conversion_Rate = normalize_bar("pink",0.00001)
))
table$Land_Cover_Type[1]<-"Developed"
formattable(table,list(
Conversion_Rate = normalize_bar("pink",0.00001)
))
table$Land_Cover_Type[2]<-"Farm
formattable(table,list(
table$Land_Cover_Type[2]<-"Farm"
table <-dat %>%
dplyr::select(lc_change:otherUndeveloped_2001) %>%
gather(Land_Cover_Type, Value, -lc_change, -geometry) %>%
st_set_geometry(NULL) %>%
group_by(lc_change, Land_Cover_Type) %>%
summarize(n = sum(as.numeric(Value))) %>%
ungroup() %>%
mutate(Conversion_Rate = paste0(round(100 * n/sum(n), 2), "%")) %>%
filter(lc_change == 1) %>%
dplyr::select(Land_Cover_Type,Conversion_Rate)
table <- data.frame(table)
table$Land_Cover_Type[1]<-"Developed"
table$Land_Cover_Type[2]<-"Farm"
table$Land_Cover_Type[3]<-"Forest"
table$Land_Cover_Type[5]<-"Wetland"
formattable(table,
align=c("l","r"),
list(
Conversion_Rate = color_bar("pink")
))
formattable(table,
align=c("l","r"),
list(
Conversion_Rate = color_bar("pink",100)
))
formattable(table,
align=c("l","r")
)
formattable(table,
align=c("l","r"),
list(
Conversion_Rate = color_bar("pink", fun=unit.scale)
))
formattable(table,
align=c("l","r"),
list(
`Conversion_Rate` = color_bar("pink", fun=unit.scale)
))
unit.scale = function(x) (x - min(x)) / (max(x) - min(x))
formattable(table,
align=c("l","r"),
list(
`Conversion_Rate` = color_bar("pink", fun=unit.scale)
))
unit.scale = function(x) (x - min(x))*100 / (max(x) - min(x))
formattable(table,
align=c("l","r"),
list(
`Conversion_Rate` = color_bar("pink", fun=unit.scale)
))
t
formattable(table,
align=c("l","r"))
formattable(table,
align=c("r","l"))
formattable(table,
align=c("l","l"))
table <-dat %>%
dplyr::select(lc_change:otherUndeveloped_2001) %>%
gather(Land_Cover_Type, Value, -lc_change, -geometry) %>%
st_set_geometry(NULL) %>%
group_by(lc_change, Land_Cover_Type) %>%
summarize(n = sum(as.numeric(Value))) %>%
ungroup() %>%
mutate(Conversion_Rate = paste0(round(100 * n/sum(n), 2), "%")) %>%
filter(lc_change == 1) %>%
dplyr::select(Land_Cover_Type,Conversion_Rate)
table <- data.frame(table)
table$Land_Cover_Type[1]<-"Developed"
table$Land_Cover_Type[2]<-"Farm"
table$Land_Cover_Type[3]<-"Forest"
table$Land_Cover_Type[4]<-"Other Undeveloped"
formattable(table,
align=c("l","l"))
# kable() %>% kable_styling(full_width = F)
View(dat)
class(dat)
st_write(dat,"dat.shp")
